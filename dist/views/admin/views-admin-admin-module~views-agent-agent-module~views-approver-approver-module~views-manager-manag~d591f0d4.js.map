{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/views/content/accounts.component.html","webpack:///./src/app/views/content/accounts.component.ts","webpack:///./src/app/views/content/clients.component.html","webpack:///./src/app/views/content/clients.component.ts","webpack:///./src/app/views/content/content.module.ts","webpack:///./src/app/views/content/groups.component.html","webpack:///./src/app/views/content/groups.component.ts","webpack:///./src/app/views/content/lenders.component.html","webpack:///./src/app/views/content/lenders.component.ts","webpack:///./src/app/views/content/transactions.component.html","webpack:///./src/app/views/content/transactions.component.ts","webpack:///./src/app/views/content/users.component.html","webpack:///./src/app/views/content/users.component.ts"],"names":[],"mappings":"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","file":"views-admin-admin-module~views-agent-agent-module~views-approver-approver-module~views-manager-manag~d591f0d4.js","sourcesContent":["module.exports = \".floatLeft {\\n  float: left;\\n}\\n.text-value {\\n  font-size: 1.03125rem;\\n  font-weight: 600;\\n}\\n.clickable {\\n  cursor: pointer;\\n}\"","module.exports = \"<div class=\\\"floatLeft clickable animated fadeIn col-sm-6 col-lg-3\\\" *ngFor=\\\"let account of accounts\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n    <div class=\\\"card-body pb-0\\\">\\n      <div class=\\\"text-value\\\">{{ account.name }}</div>\\n      <div>Balance: {{ account.balance }} </div>\\n      <div>Api: {{ account.apiEnd }}</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Api } from '../../api.service'\nimport { HybridMessage } from '../../models/models';\nimport { IAccount } from '../../interfaces/account';\n@Component({\n  templateUrl: 'accounts.component.html'\n  , styleUrls: ['../../app.component.css']\n})\nexport class AccountsComponent implements OnInit {\n  private accounts: IAccount[]\n\n  constructor(private api: Api) { }\n\n  ngOnInit() {\n    this.getAccounts()\n    this.accounts = [\n      {\n        name: `Equity`\n        , balance: 1000000\n        , apiEnd: `http://www.equity.co.ke/deduct/account`\n      }\n      , {\n        name: `KCB`\n        , balance: 1500000\n        , apiEnd: `http://www.kcb.co.ke/deduct/account`\n      }\n      , {\n        name: `Co-operative`\n        , balance: 600000\n        , apiEnd: `http://www.coop.co.ke/deduct/account`\n      }\n      , {\n        name: `Consolidated`\n        , balance: 120000\n        , apiEnd: `http://www.consolidated.co.ke/deduct/account`\n      }\n    ]\n  }\n\n  private getAccounts() {\n    this.api.send(new HybridMessage('/accounts/list', 'accounts:list', 'get')).subscribe((accounts: IAccount[]) => {\n      this.accounts = accounts\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"floatLeft clickable animated fadeIn col-sm-6 col-lg-4\\\" *ngFor=\\\"let client of clients\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n    <div class=\\\"card-body pb-0\\\">\\n      <div class=\\\"text-value\\\">{{ client.name }}</div>\\n      <div>Rating: {{ client.rating }} </div>\\n      <div>Mlipia balance: {{ client.mlipia_balance }}</div>\\n      <div class=\\\"btn-group float-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-transparent p-0\\\" (click)=\\\"selectClient(client); infoModal.show()\\\">\\n          <i class=\\\"icon-info\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"selected_lient\\\" bsModal #infoModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n  aria-labelledby=\\\"info\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{selected_client.name}} Details</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"infoModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Details go here&hellip;</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"infoModal.hide()\\\">Dismiss</button>\\n      </div>\\n    </div><!-- /.modal-content -->\\n  </div><!-- /.modal-dialog -->\\n</div><!-- /.modal -->\"","import { Component, OnInit } from '@angular/core'\nimport { ModalDirective } from 'ngx-bootstrap/modal'\nimport { IClient } from '../../interfaces/interfaces'\nimport { Api } from '../../api.service'\nimport { HybridMessage } from '../../models/models'\n\n@Component({\n  templateUrl: 'clients.component.html'\n  , styleUrls: ['../../app.component.css']\n})\nexport class ClientsComponent implements OnInit {\n\n  public clients: IClient[]\n  public infoModal\n  public selected_client: IClient\n  /**\n   *\n   */\n  constructor(private api: Api) { }\n\n  /**\n   *@description run on application start\n   *@access public\n   * @memberof ClientsComponent\n   */\n  ngOnInit() {\n    this.getClients()\n    this.clients = [\n      {\n        name: 'Dave Joe M'\n        , rating: 1500\n        , mlipia_balance: 20000\n      }\n      , {\n        name: 'Kelvin Karis'\n        , rating: 1500\n        , mlipia_balance: 1600\n      }\n      , {\n        name: 'Anthony M'\n        , rating: 1500\n        , mlipia_balance: 33333\n      }\n      , {\n        name: 'Some guy'\n        , rating: 400\n        , mlipia_balance: 20000\n      }\n    ]\n  }\n\n  private getClients() {\n    this.api.send(new HybridMessage('/clients/list', 'clients:list', 'get')).subscribe((clients: IClient[]) => {\n      this.clients = clients\n    })\n  }\n\n  public selectClient(client: IClient) {\n    this.selected_client = client\n  }\n\n}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { ModalModule } from 'ngx-bootstrap/modal'\n\nimport { AccountsComponent } from './accounts.component'\nimport { ClientsComponent } from './clients.component'\nimport { GroupsComponent } from './groups.component'\nimport { TransactionsComponent } from './transactions.component'\nimport { UsersComponent } from './users.component'\nimport { LendersComponent } from './lenders.component'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule.forRoot()\n  ],\n  declarations: [\n    AccountsComponent\n    , ClientsComponent\n    , GroupsComponent\n    , LendersComponent\n    , TransactionsComponent\n    , UsersComponent\n  ]\n})\nexport class ContentModule { }\n","module.exports = \"<div class=\\\"floatLeft clickable animated fadeIn col-sm-6 col-lg-3\\\" *ngFor=\\\"let group of groups\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n    <div class=\\\"card-body pb-0\\\">\\n      <div class=\\\"text-value\\\">{{ group.name }}</div>\\n      <div>Users: {{ group.users.all.length }} </div>\\n      <div>Active: {{ group.users.active.length}}</div>\\n      <div>Disabled: {{ group.users.disabled.length}}</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Api } from '../../api.service';\nimport { IGroup } from '../../interfaces/group';\nimport { HybridMessage } from '../../models/models';\n\n@Component({\n  templateUrl: 'groups.component.html'\n  , styleUrls: ['../../app.component.css']\n})\nexport class GroupsComponent implements OnInit {\n\n  public groups: IGroup[]\n\n  constructor(private api: Api) { }\n\n  ngOnInit() {\n    this.getUsers()\n    this.groups = [\n      {\n        name: 'Administrators'\n        , rights: []\n        , users: {\n          all: [{\n            name: 'Dave Joe M'\n            , role: 'admin'\n            , username: 'dave'\n            , active: true\n          }]\n          , active: [{\n            name: 'Dave Joe M'\n            , role: 'admin'\n            , username: 'dave'\n            , active: true\n          }]\n          , disabled: []\n        }\n      }\n      , {\n        name: 'Managers'\n        , rights: []\n        , users: {\n          all: [{\n            name: 'Kelvin Karis'\n            , role: 'manager'\n            , username: 'kelvin'\n            , active: true\n          }]\n          , active: [{\n            name: 'Kelvin Karis'\n            , role: 'manager'\n            , username: 'kelvin'\n            , active: true\n          }]\n          , disabled: []\n        }\n      },\n      {\n        name: 'Approvers'\n        , rights: []\n        , users: {\n          all: [{\n            name: 'Anthony M'\n            , role: 'approver'\n            , username: 'anthony'\n            , active: true\n          }]\n          , active: [{\n            name: 'Anthony M'\n            , role: 'approver'\n            , username: 'anthony'\n            , active: true\n          }]\n          , disabled: []\n        }\n      },\n      {\n        name: 'Agents'\n        , rights: []\n        , users: {\n          all: [{\n            name: 'Some guy'\n            , role: 'agent'\n            , username: 'agent'\n            , active: true\n          }]\n          , active: [{\n            name: 'Some guy'\n            , role: 'agent'\n            , username: 'agent'\n            , active: true\n          }]\n          , disabled: []\n        }\n      },\n    ]\n  }\n\n  private getUsers() {\n    this.api.send(new HybridMessage('/groups/list', 'groups:list', 'get')).subscribe((groups: IGroup[]) => {\n      this.groups = groups\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"floatLeft clickable animated fadeIn col-sm-6 col-lg-3\\\" *ngFor=\\\"let lender of lenders\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n    <div class=\\\"card-body pb-0\\\">\\n      <div class=\\\"text-value\\\">{{ lender.name }}</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core'\nimport { Api } from '../../api.service'\nimport { ILender } from '../../interfaces/lender'\nimport { HybridMessage } from '../../models/models'\n\n@Component({\n  templateUrl: 'lenders.component.html'\n  , styleUrls: ['../../app.component.css']\n})\nexport class LendersComponent {\n  public lenders: ILender[]\n\n  constructor(private api: Api) { }\n\n  ngOnInit() {\n    this.getUsers()\n    this.lenders = [\n      { name: `Tala` }, { name: `Branch` }, { name: `Timiza` }\n    ]\n  }\n\n  private getUsers() {\n    this.api.send(new HybridMessage('/lenders/list', 'lenders:list', 'get')).subscribe((lenders: ILender[]) => {\n      this.lenders = lenders\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"floatLeft clickable animated fadeIn col-sm-6 col-lg-3\\\" *ngFor=\\\"let transaction of transactions\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n    <div class=\\\"card-body pb-0\\\">\\n      <div class=\\\"text-value\\\">Account: {{ transaction.account.name }}</div>\\n      <div>Client: {{ transaction.client.name }} </div>\\n      <div>Amount: {{ transaction.amount }}</div>\\n      <div>Succeeded: {{ transaction.success ? 'Yes' : 'No' }}</div>\\n      <div>Date: {{ transaction.date}}</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core'\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router'\nimport { switchMap } from 'rxjs/operators'\nimport { Api } from '../../api.service'\nimport { ITransaction } from '../../interfaces/interfaces'\nimport { HybridMessage } from '../../models/models'\n\n@Component({\n  templateUrl: 'transactions.component.html'\n  , styleUrls: ['../../app.component.css']\n})\nexport class TransactionsComponent implements OnInit {\n  private selected: string\n  public transactions: ITransaction[]\n\n  constructor(\n    private api: Api\n    , private router: Router\n    , private route: ActivatedRoute,\n  ) {\n    this.selected = 'all'\n    this.transactions = []\n  }\n\n  ngOnInit() {\n    this.getTransactions()\n  }\n\n  private getTransactions() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) =>\n        this.api.send(\n          new HybridMessage(\n            '/transactions/list'\n            , 'transactions:list'\n            , 'post'\n            , { select: this.selected ? this.selected : params.get('select') }\n          )\n        )\n      )\n    ).subscribe((transactions: ITransaction[]) => {\n      this.transactions = transactions\n      console.log(transactions)\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"floatLeft clickable animated fadeIn col-sm-6 col-lg-3\\\" *ngFor=\\\"let user of users\\\">\\n  <div class=\\\"card text-white bg-primary\\\">\\n    <div class=\\\"card-body pb-0\\\">\\n      <div class=\\\"text-value\\\">{{ user.name }}</div>\\n      <div>Username: {{ user.username }} </div>\\n      <div>Role: {{ user.role }}</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core'\nimport { IUser } from '../../interfaces/interfaces'\nimport { Api } from '../../api.service'\nimport { HybridMessage } from '../../models/models'\n\n@Component({\n  templateUrl: 'users.component.html'\n  , styleUrls: ['../../app.component.css']\n})\nexport class UsersComponent implements OnInit {\n  public users: IUser[]\n\n  constructor(private api: Api) { }\n\n  ngOnInit() {\n    this.getUsers()\n    this.users = [\n      {\n        name: 'Dave Joe M'\n        , role: 'admin'\n        , username: 'dave'\n        , active: true\n      }\n      , {\n        name: 'Kelvin Karis'\n        , role: 'manager'\n        , username: 'kelvin'\n        , active: true\n      }\n      , {\n        name: 'Anthony M'\n        , role: 'approver'\n        , username: 'anthony'\n        , active: true\n      }\n      , {\n        name: 'Some guy'\n        , role: 'agent'\n        , username: 'agent'\n        , active: true\n      }\n    ]\n  }\n\n  private getUsers() {\n    this.api.send(new HybridMessage('/users/list', 'users:list', 'get')).subscribe((users: IUser[]) => {\n      this.users = users\n    })\n  }\n}\n"],"sourceRoot":""}